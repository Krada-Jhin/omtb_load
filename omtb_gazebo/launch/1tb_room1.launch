<launch>
  <arg name="model" default="waffle" doc="model type [waffle, waffle_pi]"/>
  <arg name="use_robot_name1" default="robot1"/>

  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find omtb_gazebo)/worlds/room1.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value=""/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <group ns="$(arg use_robot_name1)">
    <param name="tf_prefix" value="$(arg use_robot_name1)" />
    <rosparam file="$(find omtb_gazebo)/config/gazebo_controller.yaml" command="load"/>
    <include file="$(find  omtb_gazebo)/launch/robot.launch" >
      <arg name="init_pose" value="-x 0 -y 0 -z 0" />
      <arg name="use_robot_name"  value="$(arg use_robot_name1)" />
    </include>
    <include file="$(find omtb_gazebo)/launch/joint_controller.launch">
      <arg name="use_robot_name" value="$(arg use_robot_name1)"/>
    </include>
  </group>

</launch>
